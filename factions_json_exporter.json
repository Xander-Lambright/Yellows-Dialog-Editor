function chat(e){
    var API = Java.type('noppes.npcs.api.NpcAPI').Instance()
    var factions = API.getFactions().list()
    var faction_dict = ''
    
    for (var f = 0; f < factions.size(); f++){
        e.player.message(factions[f].name+" "+factions[f].id)
        if(f == factions.size()-1){
            faction_dict += '"'+factions[f].name+'":'+" "+factions[f].id+"\n"
        }
        else{
            faction_dict += '"'+factions[f].name+'":'+" "+factions[f].id+",\n"
        }
        }
    e.player.message(faction_dict)
    var JSON_FILEPATH = 'exported_factions/factions_'+e.player.getWorld().name+'.json';
    mkPath(JSON_FILEPATH)
    writeToFile(JSON_FILEPATH,"{\n"+faction_dict+"}")
    }
    
    
    var File = Java.type("java.io.File");
    var Files = Java.type("java.nio.file.Files");
    var Paths = Java.type("java.nio.file.Paths");
    var CHARSET_UTF_8 = Java.type("java.nio.charset.StandardCharsets").UTF_8;
     
     
     
     
     
    function mkPath(path) { //This will create a path, if you provide a path with non-existend directories it will create them, very handy
        var expath = path.split("/");
        var curpath = "";
        for(var ex in expath) {
            var expt = expath[ex];
            curpath += (curpath == "" ? "" : "/")+expt;
            var pfile = new File(curpath);
            if(!pfile.exists()) {
                if(expt.match(/[\w]+\.[\w]+/) === null) { //is dir?
                    pfile.mkdir();
                } else {
                    pfile.createNewFile();
                }
            }
        }
    }
    
    function writeToFile(filePath, text) {
        var path = Paths.get(filePath);
        try {
            var writer = Files.newBufferedWriter(path, CHARSET_UTF_8);
            writer.write(text);
            writer.close();
            return true;
        } catch (exc) {
            return false
        }
    }
    